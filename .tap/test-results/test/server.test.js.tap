TAP version 14
Server is listening on 8080
# Subtest: POST /users/signup
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 19
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:19:5)
      source: |
        tap.test("POST /users/signup", async (t) => {
          const response = await server.post("/users/signup").send(mockUser);
          t.equal(response.status, 200);
        ----^
          t.end();
        });
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -200
        +400
      ...
    
    1..1
not ok 1 - POST /users/signup # time=42.224ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 17
    columnNumber: 5
    typeName: Object
  source: |
    // Auth tests
  
    tap.test("POST /users/signup", async (t) => {
    ----^
      const response = await server.post("/users/signup").send(mockUser);
      t.equal(response.status, 200);
  ...

# Subtest: POST /users/signup with missing email
    ok 1 - should be equal
    1..1
ok 2 - POST /users/signup with missing email # time=3.499ms

# Subtest: POST /users/login
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 37
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:37:5)
      source: |2
            password: mockUser.password,
          });
          t.equal(response.status, 200);
        ----^
          t.hasOwnProp(response.body, "token");
          token = response.body.token;
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -200
        +400
      ...
    
    not ok 2 - specified property should be defined own property
      ---
      at:
        fileName: test/server.test.js
        lineNumber: 38
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:38:5)
      source: |2
          });
          t.equal(response.status, 200);
          t.hasOwnProp(response.body, "token");
        ----^
          token = response.body.token;
          t.end();
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,3 @@
        -token
        +Object {
        +  "message": "\"username\" is required",
        +}
      ...
    
    1..2
not ok 3 - POST /users/login # time=9.911ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 32
    columnNumber: 5
    typeName: Object
  source: |
    });
  
    tap.test("POST /users/login", async (t) => {
    ----^
      const response = await server.post("/users/login").send({
        email: mockUser.email,
  ...

# Subtest: POST /users/login with wrong password
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 48
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:48:5)
      source: |2
            password: "wrongpassword",
          });
          t.equal(response.status, 401);
        ----^
          t.end();
        });
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -401
        +400
      ...
    
    1..1
not ok 4 - POST /users/login with wrong password # time=4.691ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 43
    columnNumber: 5
    typeName: Object
  source: |
    });
  
    tap.test("POST /users/login with wrong password", async (t) => {
    ----^
      const response = await server.post("/users/login").send({
        email: mockUser.email,
  ...

# Subtest: GET /users/preferences
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 58
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:58:5)
      source: |2
            .get("/users/preferences")
            .set("Authorization", `Bearer ${token}`);
          t.equal(response.status, 200);
        ----^
          t.hasOwnProp(response.body, "preferences");
          t.same(response.body.preferences, mockUser.preferences);
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -200
        +401
      ...
    
    not ok 2 - specified property should be defined own property
      ---
      at:
        fileName: test/server.test.js
        lineNumber: 59
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:59:5)
      source: |2
            .set("Authorization", `Bearer ${token}`);
          t.equal(response.status, 200);
          t.hasOwnProp(response.body, "preferences");
        ----^
          t.same(response.body.preferences, mockUser.preferences);
          t.end();
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,3 @@
        -preferences
        +Object {
        +  "message": "Login !!! with correct password",
        +}
      ...
    
    not ok 3 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,4 +1,1 @@
        -Array [
        -  "movies",
        -  "comics",
        -]
        +undefined
      at:
        fileName: test/server.test.js
        lineNumber: 60
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:60:5)
      source: |2
          t.equal(response.status, 200);
          t.hasOwnProp(response.body, "preferences");
          t.same(response.body.preferences, mockUser.preferences);
        ----^
          t.end();
        });
      ...
    
    1..3
not ok 5 - GET /users/preferences # time=9.976ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 54
    columnNumber: 5
    typeName: Object
  source: |
    // Preferences tests
  
    tap.test("GET /users/preferences", async (t) => {
    ----^
      const response = await server
        .get("/users/preferences")
  ...

# Subtest: GET /users/preferences without token
    ok 1 - should be equal
    1..1
ok 6 - GET /users/preferences without token # time=2.448ms

# Subtest: PUT /users/preferences
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 77
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:77:5)
      source: |2
              preferences: ["movies", "comics", "games"],
            });
          t.equal(response.status, 200);
        ----^
        });
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -200
        +404
      ...
    
    1..1
not ok 7 - PUT /users/preferences # time=4.794ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 70
    columnNumber: 5
    typeName: Object
  source: |
    });
  
    tap.test("PUT /users/preferences", async (t) => {
    ----^
      const response = await server
        .put("/users/preferences")
  ...

# Subtest: Check PUT /users/preferences
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 84
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:84:5)
      source: |2
            .get("/users/preferences")
            .set("Authorization", `Bearer ${token}`);
          t.equal(response.status, 200);
        ----^
          t.same(response.body.preferences, ["movies", "comics", "games"]);
          t.end();
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -200
        +401
      ...
    
    not ok 2 - should be equivalent
      ---
      diff: |
        --- expected
        +++ actual
        @@ -1,5 +1,1 @@
        -Array [
        -  "movies",
        -  "comics",
        -  "games",
        -]
        +undefined
      at:
        fileName: test/server.test.js
        lineNumber: 85
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:85:5)
      source: |2
            .set("Authorization", `Bearer ${token}`);
          t.equal(response.status, 200);
          t.same(response.body.preferences, ["movies", "comics", "games"]);
        ----^
          t.end();
        });
      ...
    
    1..2
not ok 8 - Check PUT /users/preferences # time=5.81ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 80
    columnNumber: 5
    typeName: Object
  source: |
    });
  
    tap.test("Check PUT /users/preferences", async (t) => {
    ----^
      const response = await server
        .get("/users/preferences")
  ...

# Subtest: GET /news
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 95
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:95:5)
      source: |2
            .get("/news")
            .set("Authorization", `Bearer ${token}`);
          t.equal(response.status, 200);
        ----^
          t.hasOwnProp(response.body, "news");
          t.end();
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -200
        +404
      ...
    
    not ok 2 - specified property should be defined own property
      ---
      at:
        fileName: test/server.test.js
        lineNumber: 96
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:96:5)
      source: |2
            .set("Authorization", `Bearer ${token}`);
          t.equal(response.status, 200);
          t.hasOwnProp(response.body, "news");
        ----^
          t.end();
        });
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -news
        +Object {}
      ...
    
    1..2
not ok 9 - GET /news # time=5.618ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 91
    columnNumber: 5
    typeName: Object
  source: |
    // News tests
  
    tap.test("GET /news", async (t) => {
    ----^
      const response = await server
        .get("/news")
  ...

# Subtest: GET /news without token
    not ok 1 - should be equal
      ---
      compare: ===
      at:
        fileName: test/server.test.js
        lineNumber: 102
        columnNumber: 5
        typeName: Test
      stack: |
        Test.<anonymous> (test/server.test.js:102:5)
      source: |
        tap.test("GET /news without token", async (t) => {
          const response = await server.get("/news");
          t.equal(response.status, 401);
        ----^
          t.end();
        });
      diff: |
        --- expected
        +++ actual
        @@ -1,1 +1,1 @@
        -401
        +404
      ...
    
    1..1
not ok 10 - GET /news without token # time=3.393ms
  ---
  at:
    fileName: test/server.test.js
    lineNumber: 100
    columnNumber: 5
    typeName: Object
  source: |
    });
  
    tap.test("GET /news without token", async (t) => {
    ----^
      const response = await server.get("/news");
      t.equal(response.status, 401);
  ...

1..10
